name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      android:
        description: 'Build Android'
        required: false
        type: boolean
      linux:
        description: 'Build Linux'
        required: false
        type: boolean
      windows:
        description: 'Build Windows'
        required: false
        type: boolean

jobs:
  build-for-android-and-linux:
    runs-on: ubuntu-latest
    name: "Build for Android and Linux"
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/') || inputs.linux || inputs.android
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Build Android
        if: startsWith(github.ref, 'refs/tags/') || inputs.android
        run: |
          echo "Android NDK home: $ANDROID_NDK_HOME"
          make android
        env:
          MEGACLOUD_EXTRACTOR: ${{ secrets.MEGACLOUD_EXTRACTOR }}
          TMDB_SECRET: ${{ secrets.TMDB_SECRET }}
      - name: Build Linux x86
        if: startsWith(github.ref, 'refs/tags/') || inputs.linux
        run: make linux
        env:
          MEGACLOUD_EXTRACTOR: ${{ secrets.MEGACLOUD_EXTRACTOR }}
          TMDB_SECRET: ${{ secrets.TMDB_SECRET }}
      - name: Prepare artifacts
        run: |
          mkdir output
          mv target/aarch64-linux-android/release/libstrumok_suppliers.so output/lib-android-aarch64.so
          mv target/armv7-linux-androideabi/release/libstrumok_suppliers.so output/lib-android-armv7.so
          mv target/x86_64-unknown-linux-gnu/release/libstrumok_suppliers.so output/lib-linux-x86.so
      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: android-linux-outputs
          path: output
          retention-days: 7

  build-for-windows:
    runs-on: windows-latest
    name: "Build for Windows"
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/') || inputs.windows
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Build for Windows x86
        run: cargo build --target x86_64-pc-windows-msvc --release
        shell: bash
        env:
          MEGACLOUD_EXTRACTOR: ${{ secrets.MEGACLOUD_EXTRACTOR }}
          TMDB_SECRET: ${{ secrets.TMDB_SECRET }}
      - name: Prepare artifacts
        run: |
          mkdir output
          mv target/x86_64-pc-windows-msvc/release/strumok_suppliers.dll output/lib-win-86.dll
        shell: bash
      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: windows-outputs
          path: output
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    name: "Release"
    permissions: write-all
    needs: [build-for-android-and-linux, build-for-windows]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-linux-outputs
          path: android-linux-outputs
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-outputs
          path: windows-outputs
      - name: Generate metadata
        run: |
          JSON_DATA=$(cat << EOF
          {
            "name": "strumok_suppliers",
            "version": "$TAG",
            "metadataUrl": "${SERVER_URL}/${REPOSITORY}/releases/latest/download/metadata.json",
            "downloadUrl": {
                "linux": "${SERVER_URL}/${REPOSITORY}/releases/download/${TAG}/lib-linux-x86.so",
                "windows": "${SERVER_URL}/${REPOSITORY}/releases/download/${TAG}/lib-win-86.dll",
                "arm64-v8a": "${SERVER_URL}/${REPOSITORY}/releases/download/${TAG}/lib-android-aarch64.so",
                "armeabi-v7a": "${SERVER_URL}/${REPOSITORY}/releases/download/${TAG}/lib-android-armv7.so"
            }
          }
          EOF
          )

          echo "$JSON_DATA"
          echo "$JSON_DATA" > metadata.json
        env:
          TAG: ${{github.ref_name}}
          REPOSITORY: ${{ github.repository }}
          SERVER_URL: ${{ github.server_url }}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            metadata.json
            android-linux-outputs/*
            windows-outputs/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
